{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Depends on jshint.js from https://github.com/jshint/jshint\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  // declare global: JSHINT\n  function validator(text, options) {\n    if (!window.JSHINT) {\n      if (window.console) {\n        window.console.error(\"Error: window.JSHINT not defined, CodeMirror JavaScript linting cannot run.\");\n      }\n      return [];\n    }\n    if (!options.indent)\n      // JSHint error.character actually is a column index, this fixes underlining on lines using tabs for indentation\n      options.indent = 1; // JSHint default value is 4\n    JSHINT(text, options, options.globals);\n    var errors = JSHINT.data().errors,\n      result = [];\n    if (errors) parseErrors(errors, result);\n    return result;\n  }\n  CodeMirror.registerHelper(\"lint\", \"javascript\", validator);\n  function parseErrors(errors, output) {\n    for (var i = 0; i < errors.length; i++) {\n      var error = errors[i];\n      if (error) {\n        if (error.line <= 0) {\n          if (window.console) {\n            window.console.warn(\"Cannot display JSHint error (invalid line \" + error.line + \")\", error);\n          }\n          continue;\n        }\n        var start = error.character - 1,\n          end = start + 1;\n        if (error.evidence) {\n          var index = error.evidence.substring(start).search(/.\\b/);\n          if (index > -1) {\n            end += index;\n          }\n        }\n\n        // Convert to format expected by validation service\n        var hint = {\n          message: error.reason,\n          severity: error.code ? error.code.startsWith('W') ? \"warning\" : \"error\" : \"error\",\n          from: CodeMirror.Pos(error.line - 1, start),\n          to: CodeMirror.Pos(error.line - 1, end)\n        };\n        output.push(hint);\n      }\n    }\n  }\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","validator","text","options","window","JSHINT","console","error","indent","globals","errors","data","result","parseErrors","registerHelper","output","i","length","line","warn","start","character","end","evidence","index","substring","search","hint","message","reason","severity","code","startsWith","from","Pos","to","push"],"sources":["C:/Users/vkira/OneDrive/Desktop/App/realtime-code-editor/node_modules/codemirror/addon/lint/javascript-lint.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Depends on jshint.js from https://github.com/jshint/jshint\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  // declare global: JSHINT\n\n  function validator(text, options) {\n    if (!window.JSHINT) {\n      if (window.console) {\n        window.console.error(\"Error: window.JSHINT not defined, CodeMirror JavaScript linting cannot run.\");\n      }\n      return [];\n    }\n    if (!options.indent) // JSHint error.character actually is a column index, this fixes underlining on lines using tabs for indentation\n      options.indent = 1; // JSHint default value is 4\n    JSHINT(text, options, options.globals);\n    var errors = JSHINT.data().errors, result = [];\n    if (errors) parseErrors(errors, result);\n    return result;\n  }\n\n  CodeMirror.registerHelper(\"lint\", \"javascript\", validator);\n\n  function parseErrors(errors, output) {\n    for ( var i = 0; i < errors.length; i++) {\n      var error = errors[i];\n      if (error) {\n        if (error.line <= 0) {\n          if (window.console) {\n            window.console.warn(\"Cannot display JSHint error (invalid line \" + error.line + \")\", error);\n          }\n          continue;\n        }\n\n        var start = error.character - 1, end = start + 1;\n        if (error.evidence) {\n          var index = error.evidence.substring(start).search(/.\\b/);\n          if (index > -1) {\n            end += index;\n          }\n        }\n\n        // Convert to format expected by validation service\n        var hint = {\n          message: error.reason,\n          severity: error.code ? (error.code.startsWith('W') ? \"warning\" : \"error\") : \"error\",\n          from: CodeMirror.Pos(error.line - 1, start),\n          to: CodeMirror.Pos(error.line - 1, end)\n        };\n\n        output.push(hint);\n      }\n    }\n  }\n});\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA,CAAC,UAASA,GAAG,EAAE;EACb,IAAI,OAAOC,OAAO,IAAI,QAAQ,IAAI,OAAOC,MAAM,IAAI,QAAQ;IAAE;IAC3DF,GAAG,CAACG,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAClC,IAAI,OAAOC,MAAM,IAAI,UAAU,IAAIA,MAAM,CAACC,GAAG;IAAE;IAClDD,MAAM,CAAC,CAAC,sBAAsB,CAAC,EAAEJ,GAAG,CAAC,CAAC;IACnC;IACHA,GAAG,CAACM,UAAU,CAAC;AACnB,CAAC,EAAE,UAASA,UAAU,EAAE;EACtB,YAAY;;EACZ;EAEA,SAASC,SAASA,CAACC,IAAI,EAAEC,OAAO,EAAE;IAChC,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;MAClB,IAAID,MAAM,CAACE,OAAO,EAAE;QAClBF,MAAM,CAACE,OAAO,CAACC,KAAK,CAAC,6EAA6E,CAAC;MACrG;MACA,OAAO,EAAE;IACX;IACA,IAAI,CAACJ,OAAO,CAACK,MAAM;MAAE;MACnBL,OAAO,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC;IACtBH,MAAM,CAACH,IAAI,EAAEC,OAAO,EAAEA,OAAO,CAACM,OAAO,CAAC;IACtC,IAAIC,MAAM,GAAGL,MAAM,CAACM,IAAI,CAAC,CAAC,CAACD,MAAM;MAAEE,MAAM,GAAG,EAAE;IAC9C,IAAIF,MAAM,EAAEG,WAAW,CAACH,MAAM,EAAEE,MAAM,CAAC;IACvC,OAAOA,MAAM;EACf;EAEAZ,UAAU,CAACc,cAAc,CAAC,MAAM,EAAE,YAAY,EAAEb,SAAS,CAAC;EAE1D,SAASY,WAAWA,CAACH,MAAM,EAAEK,MAAM,EAAE;IACnC,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,IAAIT,KAAK,GAAGG,MAAM,CAACM,CAAC,CAAC;MACrB,IAAIT,KAAK,EAAE;QACT,IAAIA,KAAK,CAACW,IAAI,IAAI,CAAC,EAAE;UACnB,IAAId,MAAM,CAACE,OAAO,EAAE;YAClBF,MAAM,CAACE,OAAO,CAACa,IAAI,CAAC,4CAA4C,GAAGZ,KAAK,CAACW,IAAI,GAAG,GAAG,EAAEX,KAAK,CAAC;UAC7F;UACA;QACF;QAEA,IAAIa,KAAK,GAAGb,KAAK,CAACc,SAAS,GAAG,CAAC;UAAEC,GAAG,GAAGF,KAAK,GAAG,CAAC;QAChD,IAAIb,KAAK,CAACgB,QAAQ,EAAE;UAClB,IAAIC,KAAK,GAAGjB,KAAK,CAACgB,QAAQ,CAACE,SAAS,CAACL,KAAK,CAAC,CAACM,MAAM,CAAC,KAAK,CAAC;UACzD,IAAIF,KAAK,GAAG,CAAC,CAAC,EAAE;YACdF,GAAG,IAAIE,KAAK;UACd;QACF;;QAEA;QACA,IAAIG,IAAI,GAAG;UACTC,OAAO,EAAErB,KAAK,CAACsB,MAAM;UACrBC,QAAQ,EAAEvB,KAAK,CAACwB,IAAI,GAAIxB,KAAK,CAACwB,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,OAAO,GAAI,OAAO;UACnFC,IAAI,EAAEjC,UAAU,CAACkC,GAAG,CAAC3B,KAAK,CAACW,IAAI,GAAG,CAAC,EAAEE,KAAK,CAAC;UAC3Ce,EAAE,EAAEnC,UAAU,CAACkC,GAAG,CAAC3B,KAAK,CAACW,IAAI,GAAG,CAAC,EAAEI,GAAG;QACxC,CAAC;QAEDP,MAAM,CAACqB,IAAI,CAACT,IAAI,CAAC;MACnB;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}