{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import CodeMirror from\"codemirror\";import\"codemirror/lib/codemirror.css\";import\"codemirror/theme/dracula.css\";import\"codemirror/mode/javascript/javascript\";import\"codemirror/addon/edit/closetag\";import\"codemirror/addon/edit/closebrackets\";import\"codemirror/addon/lint/lint\";import\"codemirror/addon/lint/javascript-lint\";import ACTIONS from\"../Actions\";import{jsx as _jsx}from\"react/jsx-runtime\";const Editor=_ref=>{let{socketRef,roomId,onCodeChange}=_ref;const editorRef=useRef(null);useEffect(()=>{async function init(){editorRef.current=CodeMirror.fromTextArea(document.getElementById(\"realtimeEditor\"),{mode:{name:\"javascript\",json:true},theme:\"dracula\",autoCloseTags:true,autoCloseBrackets:true,lineNumbers:true,gutters:[\"CodeMirror-lint-markers\"],lint:{esversion:11,asi:true,laxbreak:true,laxcomma:true,undef:true,unused:true,maxerr:100}});editorRef.current.on(\"change\",(instance,changes)=>{const{origin}=changes;const code=instance.getValue();onCodeChange(code);if(origin!==\"setValue\"){socketRef.current.emit(ACTIONS.CODE_CHANGE,{roomId,code});}});}init();},[]);useEffect(()=>{if(socketRef.current){socketRef.current.on(ACTIONS.CODE_CHANGE,_ref2=>{let{code}=_ref2;if(code!=null){editorRef.current.setValue(code);}});}return()=>{socketRef.current.off(ACTIONS.CODE_CHANGE);};},[socketRef.current]);return/*#__PURE__*/_jsx(\"textarea\",{id:\"realtimeEditor\"});};export default Editor;","map":{"version":3,"names":["React","useEffect","useRef","CodeMirror","ACTIONS","jsx","_jsx","Editor","_ref","socketRef","roomId","onCodeChange","editorRef","init","current","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","gutters","lint","esversion","asi","laxbreak","laxcomma","undef","unused","maxerr","on","instance","changes","origin","code","getValue","emit","CODE_CHANGE","_ref2","setValue","off","id"],"sources":["C:/Users/vkira/OneDrive/Desktop/App/realtime-code-editor/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/addon/lint/lint\";\nimport \"codemirror/addon/lint/javascript-lint\";\nimport ACTIONS from \"../Actions\";\n\nconst Editor = ({ socketRef, roomId, onCodeChange }) => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    async function init() {\n      editorRef.current = CodeMirror.fromTextArea(\n        document.getElementById(\"realtimeEditor\"),\n        {\n          mode: { name: \"javascript\", json: true },\n          theme: \"dracula\",\n          autoCloseTags: true,\n          autoCloseBrackets: true,\n          lineNumbers: true,\n          gutters: [\"CodeMirror-lint-markers\"],\n          lint: {\n            esversion: 11,\n            asi: true,\n            laxbreak: true,\n            laxcomma: true,\n            undef: true,\n            unused: true,\n            maxerr: 100,\n          }\n        }\n      );\n\n      editorRef.current.on(\"change\", (instance, changes) => {\n        const { origin } = changes;\n        const code = instance.getValue();\n        onCodeChange(code);\n        if (origin !== \"setValue\") {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code,\n          });\n        }\n      });\n    }\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n        if (code != null) {\n          editorRef.current.setValue(code);\n        }\n      });\n    }\n    return () => {\n      socketRef.current.off(ACTIONS.CODE_CHANGE);\n    };\n  }, [socketRef.current]);\n\n  return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,MAAO,CAAAC,UAAU,KAAM,YAAY,CACnC,MAAO,+BAA+B,CACtC,MAAO,8BAA8B,CACrC,MAAO,uCAAuC,CAC9C,MAAO,gCAAgC,CACvC,MAAO,qCAAqC,CAC5C,MAAO,4BAA4B,CACnC,MAAO,uCAAuC,CAC9C,MAAO,CAAAC,OAAO,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjC,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,SAAS,CAAEC,MAAM,CAAEC,YAAa,CAAC,CAAAH,IAAA,CACjD,KAAM,CAAAI,SAAS,CAAGV,MAAM,CAAC,IAAI,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,cAAe,CAAAY,IAAIA,CAAA,CAAG,CACpBD,SAAS,CAACE,OAAO,CAAGX,UAAU,CAACY,YAAY,CACzCC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CACzC,CACEC,IAAI,CAAE,CAAEC,IAAI,CAAE,YAAY,CAAEC,IAAI,CAAE,IAAK,CAAC,CACxCC,KAAK,CAAE,SAAS,CAChBC,aAAa,CAAE,IAAI,CACnBC,iBAAiB,CAAE,IAAI,CACvBC,WAAW,CAAE,IAAI,CACjBC,OAAO,CAAE,CAAC,yBAAyB,CAAC,CACpCC,IAAI,CAAE,CACJC,SAAS,CAAE,EAAE,CACbC,GAAG,CAAE,IAAI,CACTC,QAAQ,CAAE,IAAI,CACdC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,IAAI,CACXC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,GACV,CACF,CACF,CAAC,CAEDrB,SAAS,CAACE,OAAO,CAACoB,EAAE,CAAC,QAAQ,CAAE,CAACC,QAAQ,CAAEC,OAAO,GAAK,CACpD,KAAM,CAAEC,MAAO,CAAC,CAAGD,OAAO,CAC1B,KAAM,CAAAE,IAAI,CAAGH,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAChC5B,YAAY,CAAC2B,IAAI,CAAC,CAClB,GAAID,MAAM,GAAK,UAAU,CAAE,CACzB5B,SAAS,CAACK,OAAO,CAAC0B,IAAI,CAACpC,OAAO,CAACqC,WAAW,CAAE,CAC1C/B,MAAM,CACN4B,IACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CACAzB,IAAI,CAAC,CAAC,CACR,CAAC,CAAE,EAAE,CAAC,CAENZ,SAAS,CAAC,IAAM,CACd,GAAIQ,SAAS,CAACK,OAAO,CAAE,CACrBL,SAAS,CAACK,OAAO,CAACoB,EAAE,CAAC9B,OAAO,CAACqC,WAAW,CAAEC,KAAA,EAAc,IAAb,CAAEJ,IAAK,CAAC,CAAAI,KAAA,CACjD,GAAIJ,IAAI,EAAI,IAAI,CAAE,CAChB1B,SAAS,CAACE,OAAO,CAAC6B,QAAQ,CAACL,IAAI,CAAC,CAClC,CACF,CAAC,CAAC,CACJ,CACA,MAAO,IAAM,CACX7B,SAAS,CAACK,OAAO,CAAC8B,GAAG,CAACxC,OAAO,CAACqC,WAAW,CAAC,CAC5C,CAAC,CACH,CAAC,CAAE,CAAChC,SAAS,CAACK,OAAO,CAAC,CAAC,CAEvB,mBAAOR,IAAA,aAAUuC,EAAE,CAAC,gBAAgB,CAAW,CAAC,CAClD,CAAC,CAED,cAAe,CAAAtC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}